<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="16" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-06T14:56:45 CET" name="Whole project test suite" finished-at="2024-02-06T14:56:54 CET" duration-ms="8750">
    <groups>
    </groups>
    <test started-at="2024-02-06T14:56:45 CET" name="Authorization" finished-at="2024-02-06T14:56:49 CET" duration-ms="3748">
      <class name="test.Authorization_Tests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.Authorization_Tests@1b1473ab]" started-at="2024-02-06T14:56:46 CET" name="setUp" finished-at="2024-02-06T14:56:46 CET" duration-ms="483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validUserAuthorization_Test()[pri:1, instance:test.Authorization_Tests@1b1473ab]" started-at="2024-02-06T14:56:46 CET" name="validUserAuthorization_Test" finished-at="2024-02-06T14:56:47 CET" duration-ms="1420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserAuthorization_Test -->
        <test-method signature="invalidUserCredentialsAuthorization_Test()[pri:2, instance:test.Authorization_Tests@1b1473ab]" started-at="2024-02-06T14:56:47 CET" name="invalidUserCredentialsAuthorization_Test" finished-at="2024-02-06T14:56:48 CET" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserCredentialsAuthorization_Test -->
        <test-method signature="invalidUsernameAuthorization_Test()[pri:3, instance:test.Authorization_Tests@1b1473ab]" started-at="2024-02-06T14:56:48 CET" name="invalidUsernameAuthorization_Test" finished-at="2024-02-06T14:56:48 CET" duration-ms="311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUsernameAuthorization_Test -->
        <test-method signature="invalidUserPasswordAuthorization_Test()[pri:4, instance:test.Authorization_Tests@1b1473ab]" started-at="2024-02-06T14:56:48 CET" name="invalidUserPasswordAuthorization_Test" finished-at="2024-02-06T14:56:49 CET" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserPasswordAuthorization_Test -->
        <test-method signature="emptyUserPasswordAuthorization_Test()[pri:5, instance:test.Authorization_Tests@1b1473ab]" started-at="2024-02-06T14:56:49 CET" name="emptyUserPasswordAuthorization_Test" finished-at="2024-02-06T14:56:49 CET" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyUserPasswordAuthorization_Test -->
        <test-method signature="emptyUsernameAuthorization_Test()[pri:6, instance:test.Authorization_Tests@1b1473ab]" started-at="2024-02-06T14:56:49 CET" name="emptyUsernameAuthorization_Test" finished-at="2024-02-06T14:56:49 CET" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyUsernameAuthorization_Test -->
      </class> <!-- test.Authorization_Tests -->
    </test> <!-- Authorization -->
    <test started-at="2024-02-06T14:56:49 CET" name="Device Information" finished-at="2024-02-06T14:56:51 CET" duration-ms="2086">
      <class name="test.GenerateTokenTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.GenerateTokenTest@6e4784bc]" started-at="2024-02-06T14:56:49 CET" name="setUp" finished-at="2024-02-06T14:56:49 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="generateTokenValidCredentials()[pri:0, instance:test.GenerateTokenTest@6e4784bc]" started-at="2024-02-06T14:56:49 CET" name="generateTokenValidCredentials" finished-at="2024-02-06T14:56:50 CET" duration-ms="921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTokenValidCredentials -->
        <test-method signature="generateTokenInvalidCredentials()[pri:0, instance:test.GenerateTokenTest@6e4784bc]" started-at="2024-02-06T14:56:50 CET" name="generateTokenInvalidCredentials" finished-at="2024-02-06T14:56:51 CET" duration-ms="617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTokenInvalidCredentials -->
        <test-method signature="generateTokenInvalidEndpoint()[pri:0, instance:test.GenerateTokenTest@6e4784bc]" started-at="2024-02-06T14:56:51 CET" name="generateTokenInvalidEndpoint" finished-at="2024-02-06T14:56:51 CET" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTokenInvalidEndpoint -->
        <test-method signature="generateTokenEmptyUserName()[pri:0, instance:test.GenerateTokenTest@6e4784bc]" started-at="2024-02-06T14:56:51 CET" name="generateTokenEmptyUserName" finished-at="2024-02-06T14:56:51 CET" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTokenEmptyUserName -->
        <test-method signature="generateTokenEmptyPassword()[pri:0, instance:test.GenerateTokenTest@6e4784bc]" started-at="2024-02-06T14:56:51 CET" name="generateTokenEmptyPassword" finished-at="2024-02-06T14:56:51 CET" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTokenEmptyPassword -->
      </class> <!-- test.GenerateTokenTest -->
    </test> <!-- Device Information -->
    <test started-at="2024-02-06T14:56:51 CET" name="Create New User" finished-at="2024-02-06T14:56:52 CET" duration-ms="622">
      <class name="test.CreateUserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.CreateUserTest@353d0772]" started-at="2024-02-06T14:56:51 CET" name="setUp" finished-at="2024-02-06T14:56:51 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createNewUserValidTest()[pri:1, instance:test.CreateUserTest@353d0772]" started-at="2024-02-06T14:56:51 CET" name="createNewUserValidTest" description="Create new user with random generated username and password" finished-at="2024-02-06T14:56:52 CET" duration-ms="211" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unexpected status code expected [400] but found [201]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unexpected status code expected [400] but found [201]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at util.VerifyStatusCode.assertCreateUserSuccessStatusCode(VerifyStatusCode.java:12)
at test.CreateUserTest.createNewUserValidTest(CreateUserTest.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUserValidTest -->
        <test-method signature="userAlreadyExistingTest()[pri:2, instance:test.CreateUserTest@353d0772]" started-at="2024-02-06T14:56:52 CET" name="userAlreadyExistingTest" description="Try to create new user with already existing user credentials" finished-at="2024-02-06T14:56:52 CET" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userAlreadyExistingTest -->
        <test-method signature="createNewUserEmptyUsernameTest()[pri:3, instance:test.CreateUserTest@353d0772]" started-at="2024-02-06T14:56:52 CET" name="createNewUserEmptyUsernameTest" description="Try to create new user with invalid password" finished-at="2024-02-06T14:56:52 CET" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUserEmptyUsernameTest -->
      </class> <!-- test.CreateUserTest -->
    </test> <!-- Create New User -->
    <test started-at="2024-02-06T14:56:52 CET" name="Get User Informaition" finished-at="2024-02-06T14:56:53 CET" duration-ms="1533">
      <class name="test.GetUserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.GetUserTest@57c758ac]" started-at="2024-02-06T14:56:52 CET" name="setUp" finished-at="2024-02-06T14:56:52 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getLogedUserInfo()[pri:1, instance:test.GetUserTest@57c758ac]" started-at="2024-02-06T14:56:52 CET" name="getLogedUserInfo" finished-at="2024-02-06T14:56:52 CET" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLogedUserInfo -->
        <test-method signature="getCreatedUserInfo()[pri:2, instance:test.GetUserTest@57c758ac]" started-at="2024-02-06T14:56:52 CET" name="getCreatedUserInfo" finished-at="2024-02-06T14:56:53 CET" duration-ms="1104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCreatedUserInfo -->
      </class> <!-- test.GetUserTest -->
    </test> <!-- Get User Informaition -->
    <test started-at="2024-02-06T14:56:53 CET" name="Get Books List" finished-at="2024-02-06T14:56:54 CET" duration-ms="758">
      <class name="test.GetBooksTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.GetBooksTest@9225652]" started-at="2024-02-06T14:56:53 CET" name="setUp" finished-at="2024-02-06T14:56:53 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getBooksTest()[pri:0, instance:test.GetBooksTest@9225652]" started-at="2024-02-06T14:56:53 CET" name="getBooksTest" finished-at="2024-02-06T14:56:54 CET" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBooksTest -->
        <test-method is-config="true" signature="sendEmailReport()[pri:0, instance:test.GetBooksTest@9225652]" started-at="2024-02-06T14:56:54 CET" name="sendEmailReport" finished-at="2024-02-06T14:57:06 CET" duration-ms="11483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendEmailReport -->
      </class> <!-- test.GetBooksTest -->
    </test> <!-- Get Books List -->
  </suite> <!-- Whole project test suite -->
</testng-results>
